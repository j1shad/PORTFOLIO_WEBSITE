---
// Theme toggle component - supports multiple instances (desktop + mobile)
---

<button
  class="theme-toggle p-2 sm:p-3 min-w-[40px] min-h-[40px] sm:min-w-[44px] sm:min-h-[44px] rounded-lg border-2 border-border hover:border-primary hover:bg-primary/5 text-foreground transition-all flex items-center justify-center"
  aria-label="Toggle theme"
>
  <svg class="theme-toggle-dark-icon hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
    <path d="M17.293 13.293A8 8 0 016.707 2.707a8.001 8.001 0 1010.586 10.586z"></path>
  </svg>
  <svg class="theme-toggle-light-icon hidden w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
    <path fill-rule="evenodd" d="M10 2a1 1 0 011 1v1a1 1 0 11-2 0V3a1 1 0 011-1zm4 8a4 4 0 11-8 0 4 4 0 018 0zm-.464 4.95l.707.707a1 1 0 001.414-1.414l-.707-.707a1 1 0 00-1.414 1.414zm2.12-10.607a1 1 0 010 1.414l-.706.707a1 1 0 11-1.414-1.414l.707-.707a1 1 0 011.414 0zM17 11a1 1 0 100-2h-1a1 1 0 100 2h1zm-7 4a1 1 0 011 1v1a1 1 0 11-2 0v-1a1 1 0 011-1zM5.05 6.464A1 1 0 106.465 5.05l-.708-.707a1 1 0 00-1.414 1.414l.707.707zm1.414 8.486l-.707.707a1 1 0 01-1.414-1.414l.707-.707a1 1 0 011.414 1.414zM4 11a1 1 0 100-2H3a1 1 0 000 2h1z" clip-rule="evenodd"></path>
  </svg>
</button>

<script>
  if (typeof window !== 'undefined') {
    // Initialize all theme toggle buttons
    function initializeThemeToggles() {
      const themeToggleBtns = document.querySelectorAll('.theme-toggle');

      themeToggleBtns.forEach((btn) => {
        const darkIcon = btn.querySelector('.theme-toggle-dark-icon');
        const lightIcon = btn.querySelector('.theme-toggle-light-icon');

        // Show correct icon on load
        if (localStorage.getItem('theme') === 'dark' || (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
          lightIcon?.classList.remove('hidden');
          darkIcon?.classList.add('hidden');
        } else {
          darkIcon?.classList.remove('hidden');
          lightIcon?.classList.add('hidden');
        }

        // Add click event listener
        btn.addEventListener('click', () => {
          const storedTheme = localStorage.getItem('theme');

          // Toggle icons on all buttons
          themeToggleBtns.forEach((toggleBtn) => {
            const darkIconEl = toggleBtn.querySelector('.theme-toggle-dark-icon');
            const lightIconEl = toggleBtn.querySelector('.theme-toggle-light-icon');
            darkIconEl?.classList.toggle('hidden');
            lightIconEl?.classList.toggle('hidden');
          });

          // Toggle theme
          if (storedTheme) {
            if (storedTheme === 'light') {
              document.documentElement.classList.add('dark');
              localStorage.setItem('theme', 'dark');
            } else {
              document.documentElement.classList.remove('dark');
              localStorage.setItem('theme', 'light');
            }
          } else {
            if (document.documentElement.classList.contains('dark')) {
              document.documentElement.classList.remove('dark');
              localStorage.setItem('theme', 'light');
            } else {
              document.documentElement.classList.add('dark');
              localStorage.setItem('theme', 'dark');
            }
          }
        });
      });
    }

    // Initialize on load
    initializeThemeToggles();

    // Re-initialize if DOM content changes (for Astro view transitions)
    document.addEventListener('astro:page-load', initializeThemeToggles);
  }
</script>
