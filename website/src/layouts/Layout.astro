---
import '../styles/global.css';
import Analytics from '../components/Analytics.astro';

export interface Props {
  title: string;
  description?: string;
  image?: string;
  type?: 'website' | 'article';
}

const {
  title,
  description = "Data Engineer building scalable data pipelines and analytics solutions. Specialized in Python, Spark, Airflow, and cloud platforms.",
  image = "/assets/og-image.png",
  type = "website"
} = Astro.props;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);
const socialImageURL = new URL(image, Astro.site);
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth dark">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon3.svg" />
    <link rel="canonical" href={canonicalURL} />
    <meta name="generator" content={Astro.generator} />

    <!-- Primary Meta Tags -->
    <title>{title}</title>
    <meta name="title" content={title} />
    <meta name="description" content={description} />
    <meta name="author" content="Jason Acquah" />
    <meta name="keywords" content="Data Engineer, Data Science, Analytics, Python, SQL, Spark, Airflow, AWS, ETL, Data Pipeline" />

    <!-- Open Graph / Facebook -->
    <meta property="og:type" content={type} />
    <meta property="og:url" content={canonicalURL} />
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:image" content={socialImageURL} />
    <meta property="og:site_name" content="Jason Acquah - Data Engineer" />

    <!-- Twitter -->
    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={canonicalURL} />
    <meta property="twitter:title" content={title} />
    <meta property="twitter:description" content={description} />
    <meta property="twitter:image" content={socialImageURL} />
    <meta property="twitter:creator" content="@jasonacquah" />

    <!-- Sitemap -->
    <link rel="sitemap" href="/sitemap-index.xml" />

    <Analytics />
  </head>
  <body class="transition-colors duration-300">
    <slot />
    <script is:inline>
      const getStoredTheme = () => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        return 'dark';
      };

      const applyTheme = (theme) => {
        document.documentElement.classList.toggle('dark', theme === 'dark');
      };

      const theme = getStoredTheme();
      applyTheme(theme);

      document.addEventListener('astro:after-swap', () => {
        const theme = localStorage.getItem('theme') || getStoredTheme();
        applyTheme(theme);
      });
    </script>
  </body>
</html>

<style>
  html {
    font-family: system-ui, sans-serif;
  }
</style>